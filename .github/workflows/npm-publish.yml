name: Publish to NPM

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty for current package.json version)'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        continue-on-error: true

      - name: Check package version
        id: version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "package-version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo "Package version: $PACKAGE_VERSION"

      - name: Dry run publish
        run: npm run publish:dry
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM
        run: npm run publish:npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Changes in ${{ github.ref_name }}

            Published @zazin/gitlab-poller@${{ steps.version.outputs.package-version }} to NPM.

            ### Installation
            ```bash
            npm install -g @zazin/gitlab-poller@${{ steps.version.outputs.package-version }}
            ```

            ### Usage
            ```bash
            npx @zazin/gitlab-poller
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
